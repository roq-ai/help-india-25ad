generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model application {
  id                      String    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id                 String    @db.Uuid
  status                  String    @db.VarChar(255)
  estimated_delivery_date DateTime? @db.Date
  created_at              DateTime  @default(now()) @db.Timestamp(6)
  updated_at              DateTime  @default(now()) @db.Timestamp(6)
  user                    user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model faq {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  question   String   @db.VarChar(255)
  answer     String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @default(now()) @db.Timestamp(6)
}

model organization {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model pan_card {
  id           String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  pan_number   String   @db.VarChar(255)
  user_id      String   @db.Uuid
  status       String   @db.VarChar(255)
  digital_copy String?  @db.VarChar(255)
  created_at   DateTime @default(now()) @db.Timestamp(6)
  updated_at   DateTime @default(now()) @db.Timestamp(6)
  user         user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id           String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email        String         @unique @db.VarChar(255)
  firstName    String?        @db.VarChar(255)
  lastName     String?        @db.VarChar(255)
  roq_user_id  String         @db.VarChar(255)
  tenant_id    String         @db.VarChar(255)
  created_at   DateTime       @default(now()) @db.Timestamp(6)
  updated_at   DateTime       @default(now()) @db.Timestamp(6)
  application  application[]
  organization organization[]
  pan_card     pan_card[]
}
